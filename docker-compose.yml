# inspired by https://github.com/BretFisher/node-docker-good-defaults

version: '2.4'

services:
  baas:
    build:
      context: .
      args:
        - NODE_ENV=development
    ports:
      - "3000:3000"
      - "9229:9229"
      - "9230:9230"
    command: nodemon --exec babel-node ./src/start.js
    volumes:
      - .:/opt/node_app/app:delegated
      - ./package.json:/opt/node_app/package.json
      - ./package-lock.json:/opt/node_app/package-lock.json
      - notused:/opt/node_app/app/node_modules
    environment:
      - NODE_ENV=development
      - DB_USERNAME=baas
      - DB_PASSWORD=sigh
      - DB_HOSTNAME=mongo
      - DB_PORT=27017
      - DB_DBNAME=baas
      - SEED_DB=true
      - REDIS_HOSTNAME=redis
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_NON_ROOT_USERNAME=baas
      - MONGO_NON_ROOT_PASSWORD=sigh
      - MONGO_INITDB_DATABASE=baas
    volumes:
      - ./src/db/mongoose/custom-user.sh:/docker-entrypoint-initdb.d/custom-user.sh:ro # initialize a db w/ username and pass if none exists
      - mongo:/data/db
    healthcheck:
      test: "[ `echo 'db.runCommand(\"ping\").ok' | mongo localhost/baas --quiet` ] && echo 0 || echo 1"
      interval: 5s
      start_period: 10s
      timeout: 4s
      retries: 3

  redis:
    image: redis:alpine
    healthcheck:
      test: redis-cli ping

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

volumes:
  notused:
  mongo:
